// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TwitterUala.Infrastructure;

#nullable disable

namespace TwitterUala.Migrations
{
    [DbContext(typeof(TwitterDbContext))]
    partial class TwitterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TwitterUala.Domain.Entities.Following", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<long>("UsersToFollowId")
                        .HasColumnType("bigint")
                        .HasColumnName("users_to_follow_id");

                    b.HasKey("UserId", "UsersToFollowId");

                    b.HasIndex(new[] { "UserId", "UsersToFollowId" }, "IX_Following_UserId_UsersToFollowId");

                    b.HasIndex(new[] { "UsersToFollowId" }, "IX_Following_UsersToFollowId");

                    b.ToTable("following", (string)null);
                });

            modelBuilder.Entity("TwitterUala.Domain.Entities.Tweet", b =>
                {
                    b.Property<long>("IdTweet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_tweet");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdTweet"));

                    b.Property<long?>("FollowingUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FollowingUsersToFollowId")
                        .HasColumnType("bigint");

                    b.Property<string>("TweetMessage")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("character varying(280)")
                        .HasColumnName("tweet_message");

                    b.Property<DateTime>("TweetPosted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("tweet_posted");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("IdTweet");

                    b.HasIndex("FollowingUserId", "FollowingUsersToFollowId");

                    b.HasIndex(new[] { "UserId" }, "IX_Tweet_UserId");

                    b.ToTable("tweet", (string)null);
                });

            modelBuilder.Entity("TwitterUala.Domain.Entities.User", b =>
                {
                    b.Property<long>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_user");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdUser"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("IdUser");

                    b.HasIndex(new[] { "IdUser" }, "IX_User_IdUser");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("TwitterUala.Domain.Entities.Tweet", b =>
                {
                    b.HasOne("TwitterUala.Domain.Entities.Following", null)
                        .WithMany("TweetsUser")
                        .HasForeignKey("FollowingUserId", "FollowingUsersToFollowId");
                });

            modelBuilder.Entity("TwitterUala.Domain.Entities.Following", b =>
                {
                    b.Navigation("TweetsUser");
                });
#pragma warning restore 612, 618
        }
    }
}
